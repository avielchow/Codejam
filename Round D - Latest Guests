# https://codingcompetitions.withgoogle.com/kickstart/round/0000000000051061/0000000000161427
# Memory Limit Exceeded for second solution

#f = open('input.txt')
#T = int(f.readline())
T = int(input())
from collections import Counter

def final_positions(guests, numberofmoves):
    end = {}
    visited_locations = set()
    for guest in guests:
        start, direction = guests[guest]
        if direction == 'C':
            final_location = (start + numberofmoves) % N
            if final_location == 0:
                final_location = N
        elif direction == 'A':
            final_location = (start - numberofmoves) % N
            if final_location == 0:
                final_location = N
        if final_location not in checked_consulates:
            end[guest] = final_location
        visited_locations.add(final_location)
    return end, visited_locations

def starting_position(guests):
    end = {}
    visited_locations = set()
    for guest in guests:
        start, direction = guests[guest]
        if start not in checked_consulates:
            end[guest] = start
        visited_locations.add(start)
    return end, visited_locations


# main
for test in range(1,T+1):
    N, G, M = [int(x) for x in input().split()]

    # Guest Number: Current Position, Direction
    Guests = {}
    for guest in range(G):
        Guests[guest] = (input().split())
        Guests[guest][0] = int(Guests[guest][0])
    # All consulates have been checked or all moves completed

    checked_consulates = set()
    all_positions = []

    while len(checked_consulates) < N and M != 0:
        end, visited_locations = final_positions(Guests, M)
        for location in visited_locations:
            checked_consulates.add(location)
        all_positions.append(end)
        M -= 1

    if M == 0:
        start, visited_locations = starting_position(Guests)
        all_positions.append(start)

    ans = []
    for position in all_positions:
        for key in position.keys():
            ans.append(key)

    ans = Counter(ans)
    formatted_ans = []
    for key,value in ans.items():
        formatted_ans.append(value)
    print (("Case #" + str(test) + ": " + ' '.join([str(elem) for elem in formatted_ans])))






